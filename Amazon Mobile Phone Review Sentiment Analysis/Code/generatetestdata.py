# -*- coding: utf-8 -*-
"""GenerateTestData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1emu8O1CywXKtTWxoqD00uoqLrHxL4nO_

Importing the Libraries and defining the parameters for the url
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
phone_ids = [("B07X9YNP5M", "DA02XD5RX5TAXJCQSEYH"),
             ("B07PSHDTHB", "S4RVB3AA4VB42JDVMDR8"),
             ("B07KX1S161", "FEJPSJC5Z05NEJVX3ACS"),
             ("B07X9YN2FJ", "89B59YQETSRYE2WGYMYA"),
             ("B01LZKLPVQ", "0HV0E4QAQS0JXPGC5PYQ"),
             ("B086K9CW1W", "05BMNFFC037FEJ2AQY6A"),
             ("B07DJD1RTM", "QCM7P8KATK57C1SGBDAX"),
             ("B086KGPM5G", "SG79XHT3W8JRWVXY1A1B"),
             ("B071HWTHBK", "4JPB3PW8JVAQZFSV8R78"),
             ("B07S9G65ZQ", "FY8J5B6YY17H5MJ3QHSF")]
types = ["positive", "critical"]

"""Appending the parameters in each url string using a for loop and creating an object for each response to retrieve the page content."""

reviews = []
phones = []
for (i, j) in phone_ids:
  for t in types:
    url = "https://www.amazon.in/gp/product-reviews/"+str(i)+"/ref=cm_cr_arp_d_viewpnt_rgt?pf_rd_p=3d639351-9efb-48d1-9e5a-678972cf859b&pf_rd_s=merchandised-search-4&pf_rd_t=101&pf_rd_i=1389401031&pf_rd_m=A1VBAL9TL5WCBF&pf_rd_r="+str(j)+"&filterByStar="+str(t)+"&pageNumber=1"
    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')  
    results = soup.find_all(class_="a-size-base review-text review-text-content")
    name = soup.find("title")
    for i in results:
      text = i.span.text
      reviews.append(text.strip())
      phones.append(name.text.replace("Amazon.in:Customer reviews:", ""))

"""Viewing the list of reviews"""

print(reviews)

print(phones)

"""Total number of reviews"""

len(reviews)

"""Creating the test data frame"""

rows = pd.DataFrame()
rows['Phones'] = phones
rows['Reviews'] = reviews

rows.head()

"""Saving the dataframe as a csv file"""

rows.to_csv("test.csv", index=False)

rows['Phones'].value_counts()